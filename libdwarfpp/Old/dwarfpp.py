# This file was automatically generated by SWIG (http://www.swig.org).
# Version 1.3.33
#
# Don't modify this file, modify the SWIG interface instead.
# This file is compatible with both classic and new-style classes.

import _dwarfpp
import new
new_instancemethod = new.instancemethod
try:
    _swig_property = property
except NameError:
    pass # Python < 2.2 doesn't have 'property'.
def _swig_setattr_nondynamic(self,class_type,name,value,static=1):
    if (name == "thisown"): return self.this.own(value)
    if (name == "this"):
        if type(value).__name__ == 'PySwigObject':
            self.__dict__[name] = value
            return
    method = class_type.__swig_setmethods__.get(name,None)
    if method: return method(self,value)
    if (not static) or hasattr(self,name):
        self.__dict__[name] = value
    else:
        raise AttributeError("You cannot add attributes to %s" % self)

def _swig_setattr(self,class_type,name,value):
    return _swig_setattr_nondynamic(self,class_type,name,value,0)

def _swig_getattr(self,class_type,name):
    if (name == "thisown"): return self.this.own()
    method = class_type.__swig_getmethods__.get(name,None)
    if method: return method(self)
    raise AttributeError,name

def _swig_repr(self):
    try: strthis = "proxy of " + self.this.__repr__()
    except: strthis = ""
    return "<%s.%s; %s >" % (self.__class__.__module__, self.__class__.__name__, strthis,)

import types
try:
    _object = types.ObjectType
    _newclass = 1
except AttributeError:
    class _object : pass
    _newclass = 0
del types


class PySwigIterator(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, PySwigIterator, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, PySwigIterator, name)
    def __init__(self): raise AttributeError, "No constructor defined"
    __repr__ = _swig_repr
    __swig_destroy__ = _dwarfpp.delete_PySwigIterator
    __del__ = lambda self : None;
    def value(*args): return _dwarfpp.PySwigIterator_value(*args)
    def incr(*args): return _dwarfpp.PySwigIterator_incr(*args)
    def decr(*args): return _dwarfpp.PySwigIterator_decr(*args)
    def distance(*args): return _dwarfpp.PySwigIterator_distance(*args)
    def equal(*args): return _dwarfpp.PySwigIterator_equal(*args)
    def copy(*args): return _dwarfpp.PySwigIterator_copy(*args)
    def next(*args): return _dwarfpp.PySwigIterator_next(*args)
    def previous(*args): return _dwarfpp.PySwigIterator_previous(*args)
    def advance(*args): return _dwarfpp.PySwigIterator_advance(*args)
    def __eq__(*args): return _dwarfpp.PySwigIterator___eq__(*args)
    def __ne__(*args): return _dwarfpp.PySwigIterator___ne__(*args)
    def __iadd__(*args): return _dwarfpp.PySwigIterator___iadd__(*args)
    def __isub__(*args): return _dwarfpp.PySwigIterator___isub__(*args)
    def __add__(*args): return _dwarfpp.PySwigIterator___add__(*args)
    def __sub__(*args): return _dwarfpp.PySwigIterator___sub__(*args)
    def __iter__(self): return self
PySwigIterator_swigregister = _dwarfpp.PySwigIterator_swigregister
PySwigIterator_swigregister(PySwigIterator)

DW_TAG_array_type = _dwarfpp.DW_TAG_array_type
DW_TAG_class_type = _dwarfpp.DW_TAG_class_type
DW_TAG_entry_point = _dwarfpp.DW_TAG_entry_point
DW_TAG_enumeration_type = _dwarfpp.DW_TAG_enumeration_type
DW_TAG_formal_parameter = _dwarfpp.DW_TAG_formal_parameter
DW_TAG_imported_declaration = _dwarfpp.DW_TAG_imported_declaration
DW_TAG_label = _dwarfpp.DW_TAG_label
DW_TAG_lexical_block = _dwarfpp.DW_TAG_lexical_block
DW_TAG_member = _dwarfpp.DW_TAG_member
DW_TAG_pointer_type = _dwarfpp.DW_TAG_pointer_type
DW_TAG_reference_type = _dwarfpp.DW_TAG_reference_type
DW_TAG_compile_unit = _dwarfpp.DW_TAG_compile_unit
DW_TAG_string_type = _dwarfpp.DW_TAG_string_type
DW_TAG_structure_type = _dwarfpp.DW_TAG_structure_type
DW_TAG_subroutine_type = _dwarfpp.DW_TAG_subroutine_type
DW_TAG_typedef = _dwarfpp.DW_TAG_typedef
DW_TAG_union_type = _dwarfpp.DW_TAG_union_type
DW_TAG_unspecified_parameters = _dwarfpp.DW_TAG_unspecified_parameters
DW_TAG_variant = _dwarfpp.DW_TAG_variant
DW_TAG_common_block = _dwarfpp.DW_TAG_common_block
DW_TAG_common_inclusion = _dwarfpp.DW_TAG_common_inclusion
DW_TAG_inheritance = _dwarfpp.DW_TAG_inheritance
DW_TAG_inlined_subroutine = _dwarfpp.DW_TAG_inlined_subroutine
DW_TAG_module = _dwarfpp.DW_TAG_module
DW_TAG_ptr_to_member_type = _dwarfpp.DW_TAG_ptr_to_member_type
DW_TAG_set_type = _dwarfpp.DW_TAG_set_type
DW_TAG_subrange_type = _dwarfpp.DW_TAG_subrange_type
DW_TAG_with_stmt = _dwarfpp.DW_TAG_with_stmt
DW_TAG_access_declaration = _dwarfpp.DW_TAG_access_declaration
DW_TAG_base_type = _dwarfpp.DW_TAG_base_type
DW_TAG_catch_block = _dwarfpp.DW_TAG_catch_block
DW_TAG_const_type = _dwarfpp.DW_TAG_const_type
DW_TAG_constant = _dwarfpp.DW_TAG_constant
DW_TAG_enumerator = _dwarfpp.DW_TAG_enumerator
DW_TAG_file_type = _dwarfpp.DW_TAG_file_type
DW_TAG_friend = _dwarfpp.DW_TAG_friend
DW_TAG_namelist = _dwarfpp.DW_TAG_namelist
DW_TAG_namelist_item = _dwarfpp.DW_TAG_namelist_item
DW_TAG_namelist_items = _dwarfpp.DW_TAG_namelist_items
DW_TAG_packed_type = _dwarfpp.DW_TAG_packed_type
DW_TAG_subprogram = _dwarfpp.DW_TAG_subprogram
DW_TAG_template_type_parameter = _dwarfpp.DW_TAG_template_type_parameter
DW_TAG_template_type_param = _dwarfpp.DW_TAG_template_type_param
DW_TAG_template_value_parameter = _dwarfpp.DW_TAG_template_value_parameter
DW_TAG_template_value_param = _dwarfpp.DW_TAG_template_value_param
DW_TAG_thrown_type = _dwarfpp.DW_TAG_thrown_type
DW_TAG_try_block = _dwarfpp.DW_TAG_try_block
DW_TAG_variant_part = _dwarfpp.DW_TAG_variant_part
DW_TAG_variable = _dwarfpp.DW_TAG_variable
DW_TAG_volatile_type = _dwarfpp.DW_TAG_volatile_type
DW_TAG_dwarf_procedure = _dwarfpp.DW_TAG_dwarf_procedure
DW_TAG_restrict_type = _dwarfpp.DW_TAG_restrict_type
DW_TAG_interface_type = _dwarfpp.DW_TAG_interface_type
DW_TAG_namespace = _dwarfpp.DW_TAG_namespace
DW_TAG_imported_module = _dwarfpp.DW_TAG_imported_module
DW_TAG_unspecified_type = _dwarfpp.DW_TAG_unspecified_type
DW_TAG_partial_unit = _dwarfpp.DW_TAG_partial_unit
DW_TAG_imported_unit = _dwarfpp.DW_TAG_imported_unit
DW_TAG_mutable_type = _dwarfpp.DW_TAG_mutable_type
DW_TAG_condition = _dwarfpp.DW_TAG_condition
DW_TAG_shared_type = _dwarfpp.DW_TAG_shared_type
DW_TAG_lo_user = _dwarfpp.DW_TAG_lo_user
DW_TAG_MIPS_loop = _dwarfpp.DW_TAG_MIPS_loop
DW_TAG_HP_array_descriptor = _dwarfpp.DW_TAG_HP_array_descriptor
DW_TAG_format_label = _dwarfpp.DW_TAG_format_label
DW_TAG_function_template = _dwarfpp.DW_TAG_function_template
DW_TAG_class_template = _dwarfpp.DW_TAG_class_template
DW_TAG_GNU_BINCL = _dwarfpp.DW_TAG_GNU_BINCL
DW_TAG_GNU_EINCL = _dwarfpp.DW_TAG_GNU_EINCL
DW_TAG_ALTIUM_circ_type = _dwarfpp.DW_TAG_ALTIUM_circ_type
DW_TAG_ALTIUM_mwa_circ_type = _dwarfpp.DW_TAG_ALTIUM_mwa_circ_type
DW_TAG_ALTIUM_rev_carry_type = _dwarfpp.DW_TAG_ALTIUM_rev_carry_type
DW_TAG_ALTIUM_rom = _dwarfpp.DW_TAG_ALTIUM_rom
DW_TAG_upc_shared_type = _dwarfpp.DW_TAG_upc_shared_type
DW_TAG_upc_strict_type = _dwarfpp.DW_TAG_upc_strict_type
DW_TAG_upc_relaxed_type = _dwarfpp.DW_TAG_upc_relaxed_type
DW_TAG_PGI_kanji_type = _dwarfpp.DW_TAG_PGI_kanji_type
DW_TAG_PGI_interface_block = _dwarfpp.DW_TAG_PGI_interface_block
DW_TAG_SUN_function_template = _dwarfpp.DW_TAG_SUN_function_template
DW_TAG_SUN_class_template = _dwarfpp.DW_TAG_SUN_class_template
DW_TAG_SUN_struct_template = _dwarfpp.DW_TAG_SUN_struct_template
DW_TAG_SUN_union_template = _dwarfpp.DW_TAG_SUN_union_template
DW_TAG_SUN_indirect_inheritance = _dwarfpp.DW_TAG_SUN_indirect_inheritance
DW_TAG_SUN_codeflags = _dwarfpp.DW_TAG_SUN_codeflags
DW_TAG_SUN_memop_info = _dwarfpp.DW_TAG_SUN_memop_info
DW_TAG_SUN_omp_child_func = _dwarfpp.DW_TAG_SUN_omp_child_func
DW_TAG_SUN_rtti_descriptor = _dwarfpp.DW_TAG_SUN_rtti_descriptor
DW_TAG_SUN_dtor_info = _dwarfpp.DW_TAG_SUN_dtor_info
DW_TAG_SUN_dtor = _dwarfpp.DW_TAG_SUN_dtor
DW_TAG_SUN_f90_interface = _dwarfpp.DW_TAG_SUN_f90_interface
DW_TAG_SUN_fortran_vax_structure = _dwarfpp.DW_TAG_SUN_fortran_vax_structure
DW_TAG_SUN_hi = _dwarfpp.DW_TAG_SUN_hi
DW_TAG_hi_user = _dwarfpp.DW_TAG_hi_user
DW_children_no = _dwarfpp.DW_children_no
DW_children_yes = _dwarfpp.DW_children_yes
DW_FORM_addr = _dwarfpp.DW_FORM_addr
DW_FORM_block2 = _dwarfpp.DW_FORM_block2
DW_FORM_block4 = _dwarfpp.DW_FORM_block4
DW_FORM_data2 = _dwarfpp.DW_FORM_data2
DW_FORM_data4 = _dwarfpp.DW_FORM_data4
DW_FORM_data8 = _dwarfpp.DW_FORM_data8
DW_FORM_string = _dwarfpp.DW_FORM_string
DW_FORM_block = _dwarfpp.DW_FORM_block
DW_FORM_block1 = _dwarfpp.DW_FORM_block1
DW_FORM_data1 = _dwarfpp.DW_FORM_data1
DW_FORM_flag = _dwarfpp.DW_FORM_flag
DW_FORM_sdata = _dwarfpp.DW_FORM_sdata
DW_FORM_strp = _dwarfpp.DW_FORM_strp
DW_FORM_udata = _dwarfpp.DW_FORM_udata
DW_FORM_ref_addr = _dwarfpp.DW_FORM_ref_addr
DW_FORM_ref1 = _dwarfpp.DW_FORM_ref1
DW_FORM_ref2 = _dwarfpp.DW_FORM_ref2
DW_FORM_ref4 = _dwarfpp.DW_FORM_ref4
DW_FORM_ref8 = _dwarfpp.DW_FORM_ref8
DW_FORM_ref_udata = _dwarfpp.DW_FORM_ref_udata
DW_FORM_indirect = _dwarfpp.DW_FORM_indirect
DW_AT_sibling = _dwarfpp.DW_AT_sibling
DW_AT_location = _dwarfpp.DW_AT_location
DW_AT_name = _dwarfpp.DW_AT_name
DW_AT_ordering = _dwarfpp.DW_AT_ordering
DW_AT_subscr_data = _dwarfpp.DW_AT_subscr_data
DW_AT_byte_size = _dwarfpp.DW_AT_byte_size
DW_AT_bit_offset = _dwarfpp.DW_AT_bit_offset
DW_AT_bit_size = _dwarfpp.DW_AT_bit_size
DW_AT_element_list = _dwarfpp.DW_AT_element_list
DW_AT_stmt_list = _dwarfpp.DW_AT_stmt_list
DW_AT_low_pc = _dwarfpp.DW_AT_low_pc
DW_AT_high_pc = _dwarfpp.DW_AT_high_pc
DW_AT_language = _dwarfpp.DW_AT_language
DW_AT_member = _dwarfpp.DW_AT_member
DW_AT_discr = _dwarfpp.DW_AT_discr
DW_AT_discr_value = _dwarfpp.DW_AT_discr_value
DW_AT_visibility = _dwarfpp.DW_AT_visibility
DW_AT_import = _dwarfpp.DW_AT_import
DW_AT_string_length = _dwarfpp.DW_AT_string_length
DW_AT_common_reference = _dwarfpp.DW_AT_common_reference
DW_AT_comp_dir = _dwarfpp.DW_AT_comp_dir
DW_AT_const_value = _dwarfpp.DW_AT_const_value
DW_AT_containing_type = _dwarfpp.DW_AT_containing_type
DW_AT_default_value = _dwarfpp.DW_AT_default_value
DW_AT_inline = _dwarfpp.DW_AT_inline
DW_AT_is_optional = _dwarfpp.DW_AT_is_optional
DW_AT_lower_bound = _dwarfpp.DW_AT_lower_bound
DW_AT_producer = _dwarfpp.DW_AT_producer
DW_AT_prototyped = _dwarfpp.DW_AT_prototyped
DW_AT_return_addr = _dwarfpp.DW_AT_return_addr
DW_AT_start_scope = _dwarfpp.DW_AT_start_scope
DW_AT_bit_stride = _dwarfpp.DW_AT_bit_stride
DW_AT_stride_size = _dwarfpp.DW_AT_stride_size
DW_AT_upper_bound = _dwarfpp.DW_AT_upper_bound
DW_AT_abstract_origin = _dwarfpp.DW_AT_abstract_origin
DW_AT_accessibility = _dwarfpp.DW_AT_accessibility
DW_AT_address_class = _dwarfpp.DW_AT_address_class
DW_AT_artificial = _dwarfpp.DW_AT_artificial
DW_AT_base_types = _dwarfpp.DW_AT_base_types
DW_AT_calling_convention = _dwarfpp.DW_AT_calling_convention
DW_AT_count = _dwarfpp.DW_AT_count
DW_AT_data_member_location = _dwarfpp.DW_AT_data_member_location
DW_AT_decl_column = _dwarfpp.DW_AT_decl_column
DW_AT_decl_file = _dwarfpp.DW_AT_decl_file
DW_AT_decl_line = _dwarfpp.DW_AT_decl_line
DW_AT_declaration = _dwarfpp.DW_AT_declaration
DW_AT_discr_list = _dwarfpp.DW_AT_discr_list
DW_AT_encoding = _dwarfpp.DW_AT_encoding
DW_AT_external = _dwarfpp.DW_AT_external
DW_AT_frame_base = _dwarfpp.DW_AT_frame_base
DW_AT_friend = _dwarfpp.DW_AT_friend
DW_AT_identifier_case = _dwarfpp.DW_AT_identifier_case
DW_AT_macro_info = _dwarfpp.DW_AT_macro_info
DW_AT_namelist_item = _dwarfpp.DW_AT_namelist_item
DW_AT_priority = _dwarfpp.DW_AT_priority
DW_AT_segment = _dwarfpp.DW_AT_segment
DW_AT_specification = _dwarfpp.DW_AT_specification
DW_AT_static_link = _dwarfpp.DW_AT_static_link
DW_AT_type = _dwarfpp.DW_AT_type
DW_AT_use_location = _dwarfpp.DW_AT_use_location
DW_AT_variable_parameter = _dwarfpp.DW_AT_variable_parameter
DW_AT_virtuality = _dwarfpp.DW_AT_virtuality
DW_AT_vtable_elem_location = _dwarfpp.DW_AT_vtable_elem_location
DW_AT_allocated = _dwarfpp.DW_AT_allocated
DW_AT_associated = _dwarfpp.DW_AT_associated
DW_AT_data_location = _dwarfpp.DW_AT_data_location
DW_AT_byte_stride = _dwarfpp.DW_AT_byte_stride
DW_AT_stride = _dwarfpp.DW_AT_stride
DW_AT_entry_pc = _dwarfpp.DW_AT_entry_pc
DW_AT_use_UTF8 = _dwarfpp.DW_AT_use_UTF8
DW_AT_extension = _dwarfpp.DW_AT_extension
DW_AT_ranges = _dwarfpp.DW_AT_ranges
DW_AT_trampoline = _dwarfpp.DW_AT_trampoline
DW_AT_call_column = _dwarfpp.DW_AT_call_column
DW_AT_call_file = _dwarfpp.DW_AT_call_file
DW_AT_call_line = _dwarfpp.DW_AT_call_line
DW_AT_description = _dwarfpp.DW_AT_description
DW_AT_binary_scale = _dwarfpp.DW_AT_binary_scale
DW_AT_decimal_scale = _dwarfpp.DW_AT_decimal_scale
DW_AT_small = _dwarfpp.DW_AT_small
DW_AT_decimal_sign = _dwarfpp.DW_AT_decimal_sign
DW_AT_digit_count = _dwarfpp.DW_AT_digit_count
DW_AT_picture_string = _dwarfpp.DW_AT_picture_string
DW_AT_mutable = _dwarfpp.DW_AT_mutable
DW_AT_threads_scaled = _dwarfpp.DW_AT_threads_scaled
DW_AT_explicit = _dwarfpp.DW_AT_explicit
DW_AT_object_pointer = _dwarfpp.DW_AT_object_pointer
DW_AT_endianity = _dwarfpp.DW_AT_endianity
DW_AT_elemental = _dwarfpp.DW_AT_elemental
DW_AT_pure = _dwarfpp.DW_AT_pure
DW_AT_recursive = _dwarfpp.DW_AT_recursive
DW_AT_HP_block_index = _dwarfpp.DW_AT_HP_block_index
DW_AT_lo_user = _dwarfpp.DW_AT_lo_user
DW_AT_MIPS_fde = _dwarfpp.DW_AT_MIPS_fde
DW_AT_MIPS_loop_begin = _dwarfpp.DW_AT_MIPS_loop_begin
DW_AT_MIPS_tail_loop_begin = _dwarfpp.DW_AT_MIPS_tail_loop_begin
DW_AT_MIPS_epilog_begin = _dwarfpp.DW_AT_MIPS_epilog_begin
DW_AT_MIPS_loop_unroll_factor = _dwarfpp.DW_AT_MIPS_loop_unroll_factor
DW_AT_MIPS_software_pipeline_depth = _dwarfpp.DW_AT_MIPS_software_pipeline_depth
DW_AT_MIPS_linkage_name = _dwarfpp.DW_AT_MIPS_linkage_name
DW_AT_MIPS_stride = _dwarfpp.DW_AT_MIPS_stride
DW_AT_MIPS_abstract_name = _dwarfpp.DW_AT_MIPS_abstract_name
DW_AT_MIPS_clone_origin = _dwarfpp.DW_AT_MIPS_clone_origin
DW_AT_MIPS_has_inlines = _dwarfpp.DW_AT_MIPS_has_inlines
DW_AT_MIPS_stride_byte = _dwarfpp.DW_AT_MIPS_stride_byte
DW_AT_MIPS_stride_elem = _dwarfpp.DW_AT_MIPS_stride_elem
DW_AT_MIPS_ptr_dopetype = _dwarfpp.DW_AT_MIPS_ptr_dopetype
DW_AT_MIPS_allocatable_dopetype = _dwarfpp.DW_AT_MIPS_allocatable_dopetype
DW_AT_MIPS_assumed_shape_dopetype = _dwarfpp.DW_AT_MIPS_assumed_shape_dopetype
DW_AT_MIPS_assumed_size = _dwarfpp.DW_AT_MIPS_assumed_size
DW_AT_HP_unmodifiable = _dwarfpp.DW_AT_HP_unmodifiable
DW_AT_HP_actuals_stmt_list = _dwarfpp.DW_AT_HP_actuals_stmt_list
DW_AT_HP_proc_per_section = _dwarfpp.DW_AT_HP_proc_per_section
DW_AT_HP_raw_data_ptr = _dwarfpp.DW_AT_HP_raw_data_ptr
DW_AT_HP_pass_by_reference = _dwarfpp.DW_AT_HP_pass_by_reference
DW_AT_HP_opt_level = _dwarfpp.DW_AT_HP_opt_level
DW_AT_HP_prof_version_id = _dwarfpp.DW_AT_HP_prof_version_id
DW_AT_HP_opt_flags = _dwarfpp.DW_AT_HP_opt_flags
DW_AT_HP_cold_region_low_pc = _dwarfpp.DW_AT_HP_cold_region_low_pc
DW_AT_HP_cold_region_high_pc = _dwarfpp.DW_AT_HP_cold_region_high_pc
DW_AT_HP_all_variables_modifiable = _dwarfpp.DW_AT_HP_all_variables_modifiable
DW_AT_HP_linkage_name = _dwarfpp.DW_AT_HP_linkage_name
DW_AT_HP_prof_flags = _dwarfpp.DW_AT_HP_prof_flags
DW_AT_sf_names = _dwarfpp.DW_AT_sf_names
DW_AT_src_info = _dwarfpp.DW_AT_src_info
DW_AT_mac_info = _dwarfpp.DW_AT_mac_info
DW_AT_src_coords = _dwarfpp.DW_AT_src_coords
DW_AT_body_begin = _dwarfpp.DW_AT_body_begin
DW_AT_body_end = _dwarfpp.DW_AT_body_end
DW_AT_GNU_vector = _dwarfpp.DW_AT_GNU_vector
DW_AT_ALTIUM_loclist = _dwarfpp.DW_AT_ALTIUM_loclist
DW_AT_PGI_lbase = _dwarfpp.DW_AT_PGI_lbase
DW_AT_PGI_soffset = _dwarfpp.DW_AT_PGI_soffset
DW_AT_PGI_lstride = _dwarfpp.DW_AT_PGI_lstride
DW_AT_upc_threads_scaled = _dwarfpp.DW_AT_upc_threads_scaled
DW_AT_SUN_template = _dwarfpp.DW_AT_SUN_template
DW_AT_VMS_rtnbeg_pd_address = _dwarfpp.DW_AT_VMS_rtnbeg_pd_address
DW_AT_SUN_alignment = _dwarfpp.DW_AT_SUN_alignment
DW_AT_SUN_vtable = _dwarfpp.DW_AT_SUN_vtable
DW_AT_SUN_count_guarantee = _dwarfpp.DW_AT_SUN_count_guarantee
DW_AT_SUN_command_line = _dwarfpp.DW_AT_SUN_command_line
DW_AT_SUN_vbase = _dwarfpp.DW_AT_SUN_vbase
DW_AT_SUN_compile_options = _dwarfpp.DW_AT_SUN_compile_options
DW_AT_SUN_language = _dwarfpp.DW_AT_SUN_language
DW_AT_SUN_browser_file = _dwarfpp.DW_AT_SUN_browser_file
DW_AT_SUN_vtable_abi = _dwarfpp.DW_AT_SUN_vtable_abi
DW_AT_SUN_func_offsets = _dwarfpp.DW_AT_SUN_func_offsets
DW_AT_SUN_cf_kind = _dwarfpp.DW_AT_SUN_cf_kind
DW_AT_SUN_vtable_index = _dwarfpp.DW_AT_SUN_vtable_index
DW_AT_SUN_omp_tpriv_addr = _dwarfpp.DW_AT_SUN_omp_tpriv_addr
DW_AT_SUN_omp_child_func = _dwarfpp.DW_AT_SUN_omp_child_func
DW_AT_SUN_func_offset = _dwarfpp.DW_AT_SUN_func_offset
DW_AT_SUN_memop_type_ref = _dwarfpp.DW_AT_SUN_memop_type_ref
DW_AT_SUN_profile_id = _dwarfpp.DW_AT_SUN_profile_id
DW_AT_SUN_memop_signature = _dwarfpp.DW_AT_SUN_memop_signature
DW_AT_SUN_obj_dir = _dwarfpp.DW_AT_SUN_obj_dir
DW_AT_SUN_obj_file = _dwarfpp.DW_AT_SUN_obj_file
DW_AT_SUN_original_name = _dwarfpp.DW_AT_SUN_original_name
DW_AT_SUN_hwcprof_signature = _dwarfpp.DW_AT_SUN_hwcprof_signature
DW_AT_SUN_amd64_parmdump = _dwarfpp.DW_AT_SUN_amd64_parmdump
DW_AT_SUN_part_link_name = _dwarfpp.DW_AT_SUN_part_link_name
DW_AT_SUN_link_name = _dwarfpp.DW_AT_SUN_link_name
DW_AT_SUN_pass_with_const = _dwarfpp.DW_AT_SUN_pass_with_const
DW_AT_SUN_return_with_const = _dwarfpp.DW_AT_SUN_return_with_const
DW_AT_SUN_import_by_name = _dwarfpp.DW_AT_SUN_import_by_name
DW_AT_SUN_f90_pointer = _dwarfpp.DW_AT_SUN_f90_pointer
DW_AT_SUN_pass_by_ref = _dwarfpp.DW_AT_SUN_pass_by_ref
DW_AT_SUN_f90_allocatable = _dwarfpp.DW_AT_SUN_f90_allocatable
DW_AT_SUN_f90_assumed_shape_array = _dwarfpp.DW_AT_SUN_f90_assumed_shape_array
DW_AT_SUN_c_vla = _dwarfpp.DW_AT_SUN_c_vla
DW_AT_SUN_return_value_ptr = _dwarfpp.DW_AT_SUN_return_value_ptr
DW_AT_SUN_dtor_start = _dwarfpp.DW_AT_SUN_dtor_start
DW_AT_SUN_dtor_length = _dwarfpp.DW_AT_SUN_dtor_length
DW_AT_SUN_dtor_state_initial = _dwarfpp.DW_AT_SUN_dtor_state_initial
DW_AT_SUN_dtor_state_final = _dwarfpp.DW_AT_SUN_dtor_state_final
DW_AT_SUN_dtor_state_deltas = _dwarfpp.DW_AT_SUN_dtor_state_deltas
DW_AT_SUN_import_by_lname = _dwarfpp.DW_AT_SUN_import_by_lname
DW_AT_SUN_f90_use_only = _dwarfpp.DW_AT_SUN_f90_use_only
DW_AT_SUN_namelist_spec = _dwarfpp.DW_AT_SUN_namelist_spec
DW_AT_SUN_is_omp_child_func = _dwarfpp.DW_AT_SUN_is_omp_child_func
DW_AT_SUN_fortran_main_alias = _dwarfpp.DW_AT_SUN_fortran_main_alias
DW_AT_SUN_fortran_based = _dwarfpp.DW_AT_SUN_fortran_based
DW_AT_hi_user = _dwarfpp.DW_AT_hi_user
DW_OP_addr = _dwarfpp.DW_OP_addr
DW_OP_deref = _dwarfpp.DW_OP_deref
DW_OP_const1u = _dwarfpp.DW_OP_const1u
DW_OP_const1s = _dwarfpp.DW_OP_const1s
DW_OP_const2u = _dwarfpp.DW_OP_const2u
DW_OP_const2s = _dwarfpp.DW_OP_const2s
DW_OP_const4u = _dwarfpp.DW_OP_const4u
DW_OP_const4s = _dwarfpp.DW_OP_const4s
DW_OP_const8u = _dwarfpp.DW_OP_const8u
DW_OP_const8s = _dwarfpp.DW_OP_const8s
DW_OP_constu = _dwarfpp.DW_OP_constu
DW_OP_consts = _dwarfpp.DW_OP_consts
DW_OP_dup = _dwarfpp.DW_OP_dup
DW_OP_drop = _dwarfpp.DW_OP_drop
DW_OP_over = _dwarfpp.DW_OP_over
DW_OP_pick = _dwarfpp.DW_OP_pick
DW_OP_swap = _dwarfpp.DW_OP_swap
DW_OP_rot = _dwarfpp.DW_OP_rot
DW_OP_xderef = _dwarfpp.DW_OP_xderef
DW_OP_abs = _dwarfpp.DW_OP_abs
DW_OP_and = _dwarfpp.DW_OP_and
DW_OP_div = _dwarfpp.DW_OP_div
DW_OP_minus = _dwarfpp.DW_OP_minus
DW_OP_mod = _dwarfpp.DW_OP_mod
DW_OP_mul = _dwarfpp.DW_OP_mul
DW_OP_neg = _dwarfpp.DW_OP_neg
DW_OP_not = _dwarfpp.DW_OP_not
DW_OP_or = _dwarfpp.DW_OP_or
DW_OP_plus = _dwarfpp.DW_OP_plus
DW_OP_plus_uconst = _dwarfpp.DW_OP_plus_uconst
DW_OP_shl = _dwarfpp.DW_OP_shl
DW_OP_shr = _dwarfpp.DW_OP_shr
DW_OP_shra = _dwarfpp.DW_OP_shra
DW_OP_xor = _dwarfpp.DW_OP_xor
DW_OP_bra = _dwarfpp.DW_OP_bra
DW_OP_eq = _dwarfpp.DW_OP_eq
DW_OP_ge = _dwarfpp.DW_OP_ge
DW_OP_gt = _dwarfpp.DW_OP_gt
DW_OP_le = _dwarfpp.DW_OP_le
DW_OP_lt = _dwarfpp.DW_OP_lt
DW_OP_ne = _dwarfpp.DW_OP_ne
DW_OP_skip = _dwarfpp.DW_OP_skip
DW_OP_lit0 = _dwarfpp.DW_OP_lit0
DW_OP_lit1 = _dwarfpp.DW_OP_lit1
DW_OP_lit2 = _dwarfpp.DW_OP_lit2
DW_OP_lit3 = _dwarfpp.DW_OP_lit3
DW_OP_lit4 = _dwarfpp.DW_OP_lit4
DW_OP_lit5 = _dwarfpp.DW_OP_lit5
DW_OP_lit6 = _dwarfpp.DW_OP_lit6
DW_OP_lit7 = _dwarfpp.DW_OP_lit7
DW_OP_lit8 = _dwarfpp.DW_OP_lit8
DW_OP_lit9 = _dwarfpp.DW_OP_lit9
DW_OP_lit10 = _dwarfpp.DW_OP_lit10
DW_OP_lit11 = _dwarfpp.DW_OP_lit11
DW_OP_lit12 = _dwarfpp.DW_OP_lit12
DW_OP_lit13 = _dwarfpp.DW_OP_lit13
DW_OP_lit14 = _dwarfpp.DW_OP_lit14
DW_OP_lit15 = _dwarfpp.DW_OP_lit15
DW_OP_lit16 = _dwarfpp.DW_OP_lit16
DW_OP_lit17 = _dwarfpp.DW_OP_lit17
DW_OP_lit18 = _dwarfpp.DW_OP_lit18
DW_OP_lit19 = _dwarfpp.DW_OP_lit19
DW_OP_lit20 = _dwarfpp.DW_OP_lit20
DW_OP_lit21 = _dwarfpp.DW_OP_lit21
DW_OP_lit22 = _dwarfpp.DW_OP_lit22
DW_OP_lit23 = _dwarfpp.DW_OP_lit23
DW_OP_lit24 = _dwarfpp.DW_OP_lit24
DW_OP_lit25 = _dwarfpp.DW_OP_lit25
DW_OP_lit26 = _dwarfpp.DW_OP_lit26
DW_OP_lit27 = _dwarfpp.DW_OP_lit27
DW_OP_lit28 = _dwarfpp.DW_OP_lit28
DW_OP_lit29 = _dwarfpp.DW_OP_lit29
DW_OP_lit30 = _dwarfpp.DW_OP_lit30
DW_OP_lit31 = _dwarfpp.DW_OP_lit31
DW_OP_reg0 = _dwarfpp.DW_OP_reg0
DW_OP_reg1 = _dwarfpp.DW_OP_reg1
DW_OP_reg2 = _dwarfpp.DW_OP_reg2
DW_OP_reg3 = _dwarfpp.DW_OP_reg3
DW_OP_reg4 = _dwarfpp.DW_OP_reg4
DW_OP_reg5 = _dwarfpp.DW_OP_reg5
DW_OP_reg6 = _dwarfpp.DW_OP_reg6
DW_OP_reg7 = _dwarfpp.DW_OP_reg7
DW_OP_reg8 = _dwarfpp.DW_OP_reg8
DW_OP_reg9 = _dwarfpp.DW_OP_reg9
DW_OP_reg10 = _dwarfpp.DW_OP_reg10
DW_OP_reg11 = _dwarfpp.DW_OP_reg11
DW_OP_reg12 = _dwarfpp.DW_OP_reg12
DW_OP_reg13 = _dwarfpp.DW_OP_reg13
DW_OP_reg14 = _dwarfpp.DW_OP_reg14
DW_OP_reg15 = _dwarfpp.DW_OP_reg15
DW_OP_reg16 = _dwarfpp.DW_OP_reg16
DW_OP_reg17 = _dwarfpp.DW_OP_reg17
DW_OP_reg18 = _dwarfpp.DW_OP_reg18
DW_OP_reg19 = _dwarfpp.DW_OP_reg19
DW_OP_reg20 = _dwarfpp.DW_OP_reg20
DW_OP_reg21 = _dwarfpp.DW_OP_reg21
DW_OP_reg22 = _dwarfpp.DW_OP_reg22
DW_OP_reg23 = _dwarfpp.DW_OP_reg23
DW_OP_reg24 = _dwarfpp.DW_OP_reg24
DW_OP_reg25 = _dwarfpp.DW_OP_reg25
DW_OP_reg26 = _dwarfpp.DW_OP_reg26
DW_OP_reg27 = _dwarfpp.DW_OP_reg27
DW_OP_reg28 = _dwarfpp.DW_OP_reg28
DW_OP_reg29 = _dwarfpp.DW_OP_reg29
DW_OP_reg30 = _dwarfpp.DW_OP_reg30
DW_OP_reg31 = _dwarfpp.DW_OP_reg31
DW_OP_breg0 = _dwarfpp.DW_OP_breg0
DW_OP_breg1 = _dwarfpp.DW_OP_breg1
DW_OP_breg2 = _dwarfpp.DW_OP_breg2
DW_OP_breg3 = _dwarfpp.DW_OP_breg3
DW_OP_breg4 = _dwarfpp.DW_OP_breg4
DW_OP_breg5 = _dwarfpp.DW_OP_breg5
DW_OP_breg6 = _dwarfpp.DW_OP_breg6
DW_OP_breg7 = _dwarfpp.DW_OP_breg7
DW_OP_breg8 = _dwarfpp.DW_OP_breg8
DW_OP_breg9 = _dwarfpp.DW_OP_breg9
DW_OP_breg10 = _dwarfpp.DW_OP_breg10
DW_OP_breg11 = _dwarfpp.DW_OP_breg11
DW_OP_breg12 = _dwarfpp.DW_OP_breg12
DW_OP_breg13 = _dwarfpp.DW_OP_breg13
DW_OP_breg14 = _dwarfpp.DW_OP_breg14
DW_OP_breg15 = _dwarfpp.DW_OP_breg15
DW_OP_breg16 = _dwarfpp.DW_OP_breg16
DW_OP_breg17 = _dwarfpp.DW_OP_breg17
DW_OP_breg18 = _dwarfpp.DW_OP_breg18
DW_OP_breg19 = _dwarfpp.DW_OP_breg19
DW_OP_breg20 = _dwarfpp.DW_OP_breg20
DW_OP_breg21 = _dwarfpp.DW_OP_breg21
DW_OP_breg22 = _dwarfpp.DW_OP_breg22
DW_OP_breg23 = _dwarfpp.DW_OP_breg23
DW_OP_breg24 = _dwarfpp.DW_OP_breg24
DW_OP_breg25 = _dwarfpp.DW_OP_breg25
DW_OP_breg26 = _dwarfpp.DW_OP_breg26
DW_OP_breg27 = _dwarfpp.DW_OP_breg27
DW_OP_breg28 = _dwarfpp.DW_OP_breg28
DW_OP_breg29 = _dwarfpp.DW_OP_breg29
DW_OP_breg30 = _dwarfpp.DW_OP_breg30
DW_OP_breg31 = _dwarfpp.DW_OP_breg31
DW_OP_regx = _dwarfpp.DW_OP_regx
DW_OP_fbreg = _dwarfpp.DW_OP_fbreg
DW_OP_bregx = _dwarfpp.DW_OP_bregx
DW_OP_piece = _dwarfpp.DW_OP_piece
DW_OP_deref_size = _dwarfpp.DW_OP_deref_size
DW_OP_xderef_size = _dwarfpp.DW_OP_xderef_size
DW_OP_nop = _dwarfpp.DW_OP_nop
DW_OP_push_object_address = _dwarfpp.DW_OP_push_object_address
DW_OP_call2 = _dwarfpp.DW_OP_call2
DW_OP_call4 = _dwarfpp.DW_OP_call4
DW_OP_call_ref = _dwarfpp.DW_OP_call_ref
DW_OP_form_tls_address = _dwarfpp.DW_OP_form_tls_address
DW_OP_call_frame_cfa = _dwarfpp.DW_OP_call_frame_cfa
DW_OP_bit_piece = _dwarfpp.DW_OP_bit_piece
DW_OP_GNU_push_tls_address = _dwarfpp.DW_OP_GNU_push_tls_address
DW_OP_lo_user = _dwarfpp.DW_OP_lo_user
DW_OP_HP_unknown = _dwarfpp.DW_OP_HP_unknown
DW_OP_HP_is_value = _dwarfpp.DW_OP_HP_is_value
DW_OP_HP_fltconst4 = _dwarfpp.DW_OP_HP_fltconst4
DW_OP_HP_fltconst8 = _dwarfpp.DW_OP_HP_fltconst8
DW_OP_HP_mod_range = _dwarfpp.DW_OP_HP_mod_range
DW_OP_HP_unmod_range = _dwarfpp.DW_OP_HP_unmod_range
DW_OP_HP_tls = _dwarfpp.DW_OP_HP_tls
DW_OP_hi_user = _dwarfpp.DW_OP_hi_user
DW_ATE_address = _dwarfpp.DW_ATE_address
DW_ATE_boolean = _dwarfpp.DW_ATE_boolean
DW_ATE_complex_float = _dwarfpp.DW_ATE_complex_float
DW_ATE_float = _dwarfpp.DW_ATE_float
DW_ATE_signed = _dwarfpp.DW_ATE_signed
DW_ATE_signed_char = _dwarfpp.DW_ATE_signed_char
DW_ATE_unsigned = _dwarfpp.DW_ATE_unsigned
DW_ATE_unsigned_char = _dwarfpp.DW_ATE_unsigned_char
DW_ATE_imaginary_float = _dwarfpp.DW_ATE_imaginary_float
DW_ATE_packed_decimal = _dwarfpp.DW_ATE_packed_decimal
DW_ATE_numeric_string = _dwarfpp.DW_ATE_numeric_string
DW_ATE_edited = _dwarfpp.DW_ATE_edited
DW_ATE_signed_fixed = _dwarfpp.DW_ATE_signed_fixed
DW_ATE_unsigned_fixed = _dwarfpp.DW_ATE_unsigned_fixed
DW_ATE_decimal_float = _dwarfpp.DW_ATE_decimal_float
DW_ATE_ALTIUM_fract = _dwarfpp.DW_ATE_ALTIUM_fract
DW_ATE_lo_user = _dwarfpp.DW_ATE_lo_user
DW_ATE_ALTIUM_accum = _dwarfpp.DW_ATE_ALTIUM_accum
DW_ATE_HP_float80 = _dwarfpp.DW_ATE_HP_float80
DW_ATE_HP_complex_float80 = _dwarfpp.DW_ATE_HP_complex_float80
DW_ATE_HP_float128 = _dwarfpp.DW_ATE_HP_float128
DW_ATE_HP_complex_float128 = _dwarfpp.DW_ATE_HP_complex_float128
DW_ATE_HP_floathpintel = _dwarfpp.DW_ATE_HP_floathpintel
DW_ATE_HP_imaginary_float80 = _dwarfpp.DW_ATE_HP_imaginary_float80
DW_ATE_HP_imaginary_float128 = _dwarfpp.DW_ATE_HP_imaginary_float128
DW_ATE_SUN_interval_float = _dwarfpp.DW_ATE_SUN_interval_float
DW_ATE_SUN_imaginary_float = _dwarfpp.DW_ATE_SUN_imaginary_float
DW_ATE_hi_user = _dwarfpp.DW_ATE_hi_user
DW_DS_unsigned = _dwarfpp.DW_DS_unsigned
DW_DS_leading_overpunch = _dwarfpp.DW_DS_leading_overpunch
DW_DS_trailing_overpunch = _dwarfpp.DW_DS_trailing_overpunch
DW_DS_leading_separate = _dwarfpp.DW_DS_leading_separate
DW_DS_trailing_separate = _dwarfpp.DW_DS_trailing_separate
DW_END_default = _dwarfpp.DW_END_default
DW_END_big = _dwarfpp.DW_END_big
DW_END_little = _dwarfpp.DW_END_little
DW_END_lo_user = _dwarfpp.DW_END_lo_user
DW_END_hi_user = _dwarfpp.DW_END_hi_user
DW_ATCF_lo_user = _dwarfpp.DW_ATCF_lo_user
DW_ATCF_SUN_mop_bitfield = _dwarfpp.DW_ATCF_SUN_mop_bitfield
DW_ATCF_SUN_mop_spill = _dwarfpp.DW_ATCF_SUN_mop_spill
DW_ATCF_SUN_mop_scopy = _dwarfpp.DW_ATCF_SUN_mop_scopy
DW_ATCF_SUN_func_start = _dwarfpp.DW_ATCF_SUN_func_start
DW_ATCF_SUN_end_ctors = _dwarfpp.DW_ATCF_SUN_end_ctors
DW_ATCF_SUN_branch_target = _dwarfpp.DW_ATCF_SUN_branch_target
DW_ATCF_SUN_mop_stack_probe = _dwarfpp.DW_ATCF_SUN_mop_stack_probe
DW_ATCF_SUN_func_epilog = _dwarfpp.DW_ATCF_SUN_func_epilog
DW_ATCF_hi_user = _dwarfpp.DW_ATCF_hi_user
DW_ACCESS_public = _dwarfpp.DW_ACCESS_public
DW_ACCESS_protected = _dwarfpp.DW_ACCESS_protected
DW_ACCESS_private = _dwarfpp.DW_ACCESS_private
DW_VIS_local = _dwarfpp.DW_VIS_local
DW_VIS_exported = _dwarfpp.DW_VIS_exported
DW_VIS_qualified = _dwarfpp.DW_VIS_qualified
DW_VIRTUALITY_none = _dwarfpp.DW_VIRTUALITY_none
DW_VIRTUALITY_virtual = _dwarfpp.DW_VIRTUALITY_virtual
DW_VIRTUALITY_pure_virtual = _dwarfpp.DW_VIRTUALITY_pure_virtual
DW_LANG_C89 = _dwarfpp.DW_LANG_C89
DW_LANG_C = _dwarfpp.DW_LANG_C
DW_LANG_Ada83 = _dwarfpp.DW_LANG_Ada83
DW_LANG_C_plus_plus = _dwarfpp.DW_LANG_C_plus_plus
DW_LANG_Cobol74 = _dwarfpp.DW_LANG_Cobol74
DW_LANG_Cobol85 = _dwarfpp.DW_LANG_Cobol85
DW_LANG_Fortran77 = _dwarfpp.DW_LANG_Fortran77
DW_LANG_Fortran90 = _dwarfpp.DW_LANG_Fortran90
DW_LANG_Pascal83 = _dwarfpp.DW_LANG_Pascal83
DW_LANG_Modula2 = _dwarfpp.DW_LANG_Modula2
DW_LANG_Java = _dwarfpp.DW_LANG_Java
DW_LANG_C99 = _dwarfpp.DW_LANG_C99
DW_LANG_Ada95 = _dwarfpp.DW_LANG_Ada95
DW_LANG_Fortran95 = _dwarfpp.DW_LANG_Fortran95
DW_LANG_PLI = _dwarfpp.DW_LANG_PLI
DW_LANG_ObjC = _dwarfpp.DW_LANG_ObjC
DW_LANG_ObjC_plus_plus = _dwarfpp.DW_LANG_ObjC_plus_plus
DW_LANG_UPC = _dwarfpp.DW_LANG_UPC
DW_LANG_D = _dwarfpp.DW_LANG_D
DW_LANG_lo_user = _dwarfpp.DW_LANG_lo_user
DW_LANG_Mips_Assembler = _dwarfpp.DW_LANG_Mips_Assembler
DW_LANG_Upc = _dwarfpp.DW_LANG_Upc
DW_LANG_ALTIUM_Assembler = _dwarfpp.DW_LANG_ALTIUM_Assembler
DW_LANG_SUN_Assembler = _dwarfpp.DW_LANG_SUN_Assembler
DW_LANG_hi_user = _dwarfpp.DW_LANG_hi_user
DW_ID_case_sensitive = _dwarfpp.DW_ID_case_sensitive
DW_ID_up_case = _dwarfpp.DW_ID_up_case
DW_ID_down_case = _dwarfpp.DW_ID_down_case
DW_ID_case_insensitive = _dwarfpp.DW_ID_case_insensitive
DW_CC_normal = _dwarfpp.DW_CC_normal
DW_CC_program = _dwarfpp.DW_CC_program
DW_CC_nocall = _dwarfpp.DW_CC_nocall
DW_CC_lo_user = _dwarfpp.DW_CC_lo_user
DW_CC_ALTIUM_interrupt = _dwarfpp.DW_CC_ALTIUM_interrupt
DW_CC_ALTIUM_near_system_stack = _dwarfpp.DW_CC_ALTIUM_near_system_stack
DW_CC_ALTIUM_near_user_stack = _dwarfpp.DW_CC_ALTIUM_near_user_stack
DW_CC_ALTIUM_huge_user_stack = _dwarfpp.DW_CC_ALTIUM_huge_user_stack
DW_CC_hi_user = _dwarfpp.DW_CC_hi_user
DW_INL_not_inlined = _dwarfpp.DW_INL_not_inlined
DW_INL_inlined = _dwarfpp.DW_INL_inlined
DW_INL_declared_not_inlined = _dwarfpp.DW_INL_declared_not_inlined
DW_INL_declared_inlined = _dwarfpp.DW_INL_declared_inlined
DW_ORD_row_major = _dwarfpp.DW_ORD_row_major
DW_ORD_col_major = _dwarfpp.DW_ORD_col_major
DW_DSC_label = _dwarfpp.DW_DSC_label
DW_DSC_range = _dwarfpp.DW_DSC_range
DW_LNS_copy = _dwarfpp.DW_LNS_copy
DW_LNS_advance_pc = _dwarfpp.DW_LNS_advance_pc
DW_LNS_advance_line = _dwarfpp.DW_LNS_advance_line
DW_LNS_set_file = _dwarfpp.DW_LNS_set_file
DW_LNS_set_column = _dwarfpp.DW_LNS_set_column
DW_LNS_negate_stmt = _dwarfpp.DW_LNS_negate_stmt
DW_LNS_set_basic_block = _dwarfpp.DW_LNS_set_basic_block
DW_LNS_const_add_pc = _dwarfpp.DW_LNS_const_add_pc
DW_LNS_fixed_advance_pc = _dwarfpp.DW_LNS_fixed_advance_pc
DW_LNS_set_prologue_end = _dwarfpp.DW_LNS_set_prologue_end
DW_LNS_set_epilogue_begin = _dwarfpp.DW_LNS_set_epilogue_begin
DW_LNS_set_isa = _dwarfpp.DW_LNS_set_isa
DW_LNE_end_sequence = _dwarfpp.DW_LNE_end_sequence
DW_LNE_set_address = _dwarfpp.DW_LNE_set_address
DW_LNE_define_file = _dwarfpp.DW_LNE_define_file
DW_LNE_HP_negate_is_UV_update = _dwarfpp.DW_LNE_HP_negate_is_UV_update
DW_LNE_HP_push_context = _dwarfpp.DW_LNE_HP_push_context
DW_LNE_HP_pop_context = _dwarfpp.DW_LNE_HP_pop_context
DW_LNE_HP_set_file_line_column = _dwarfpp.DW_LNE_HP_set_file_line_column
DW_LNE_HP_set_routine_name = _dwarfpp.DW_LNE_HP_set_routine_name
DW_LNE_HP_set_sequence = _dwarfpp.DW_LNE_HP_set_sequence
DW_LNE_HP_negate_post_semantics = _dwarfpp.DW_LNE_HP_negate_post_semantics
DW_LNE_HP_negate_function_exit = _dwarfpp.DW_LNE_HP_negate_function_exit
DW_LNE_HP_negate_front_end_logical = _dwarfpp.DW_LNE_HP_negate_front_end_logical
DW_LNE_HP_define_proc = _dwarfpp.DW_LNE_HP_define_proc
DW_LNE_lo_user = _dwarfpp.DW_LNE_lo_user
DW_LNE_hi_user = _dwarfpp.DW_LNE_hi_user
DW_MACINFO_define = _dwarfpp.DW_MACINFO_define
DW_MACINFO_undef = _dwarfpp.DW_MACINFO_undef
DW_MACINFO_start_file = _dwarfpp.DW_MACINFO_start_file
DW_MACINFO_end_file = _dwarfpp.DW_MACINFO_end_file
DW_MACINFO_vendor_ext = _dwarfpp.DW_MACINFO_vendor_ext
DW_CFA_advance_loc = _dwarfpp.DW_CFA_advance_loc
DW_CFA_offset = _dwarfpp.DW_CFA_offset
DW_CFA_restore = _dwarfpp.DW_CFA_restore
DW_CFA_extended = _dwarfpp.DW_CFA_extended
DW_CFA_nop = _dwarfpp.DW_CFA_nop
DW_CFA_set_loc = _dwarfpp.DW_CFA_set_loc
DW_CFA_advance_loc1 = _dwarfpp.DW_CFA_advance_loc1
DW_CFA_advance_loc2 = _dwarfpp.DW_CFA_advance_loc2
DW_CFA_advance_loc4 = _dwarfpp.DW_CFA_advance_loc4
DW_CFA_offset_extended = _dwarfpp.DW_CFA_offset_extended
DW_CFA_restore_extended = _dwarfpp.DW_CFA_restore_extended
DW_CFA_undefined = _dwarfpp.DW_CFA_undefined
DW_CFA_same_value = _dwarfpp.DW_CFA_same_value
DW_CFA_register = _dwarfpp.DW_CFA_register
DW_CFA_remember_state = _dwarfpp.DW_CFA_remember_state
DW_CFA_restore_state = _dwarfpp.DW_CFA_restore_state
DW_CFA_def_cfa = _dwarfpp.DW_CFA_def_cfa
DW_CFA_def_cfa_register = _dwarfpp.DW_CFA_def_cfa_register
DW_CFA_def_cfa_offset = _dwarfpp.DW_CFA_def_cfa_offset
DW_CFA_def_cfa_expression = _dwarfpp.DW_CFA_def_cfa_expression
DW_CFA_expression = _dwarfpp.DW_CFA_expression
DW_CFA_cfa_offset_extended_sf = _dwarfpp.DW_CFA_cfa_offset_extended_sf
DW_CFA_def_cfa_sf = _dwarfpp.DW_CFA_def_cfa_sf
DW_CFA_def_cfa_offset_sf = _dwarfpp.DW_CFA_def_cfa_offset_sf
DW_CFA_val_offset = _dwarfpp.DW_CFA_val_offset
DW_CFA_val_offset_sf = _dwarfpp.DW_CFA_val_offset_sf
DW_CFA_val_expression = _dwarfpp.DW_CFA_val_expression
DW_CFA_lo_user = _dwarfpp.DW_CFA_lo_user
DW_CFA_low_user = _dwarfpp.DW_CFA_low_user
DW_CFA_MIPS_advance_loc8 = _dwarfpp.DW_CFA_MIPS_advance_loc8
DW_CFA_GNU_window_save = _dwarfpp.DW_CFA_GNU_window_save
DW_CFA_GNU_args_size = _dwarfpp.DW_CFA_GNU_args_size
DW_CFA_GNU_negative_offset_extended = _dwarfpp.DW_CFA_GNU_negative_offset_extended
DW_CFA_high_user = _dwarfpp.DW_CFA_high_user
DW_EH_PE_absptr = _dwarfpp.DW_EH_PE_absptr
DW_EH_PE_uleb128 = _dwarfpp.DW_EH_PE_uleb128
DW_EH_PE_udata2 = _dwarfpp.DW_EH_PE_udata2
DW_EH_PE_udata4 = _dwarfpp.DW_EH_PE_udata4
DW_EH_PE_udata8 = _dwarfpp.DW_EH_PE_udata8
DW_EH_PE_sleb128 = _dwarfpp.DW_EH_PE_sleb128
DW_EH_PE_sdata2 = _dwarfpp.DW_EH_PE_sdata2
DW_EH_PE_sdata4 = _dwarfpp.DW_EH_PE_sdata4
DW_EH_PE_sdata8 = _dwarfpp.DW_EH_PE_sdata8
DW_EH_PE_pcrel = _dwarfpp.DW_EH_PE_pcrel
DW_EH_PE_textrel = _dwarfpp.DW_EH_PE_textrel
DW_EH_PE_datarel = _dwarfpp.DW_EH_PE_datarel
DW_EH_PE_funcrel = _dwarfpp.DW_EH_PE_funcrel
DW_EH_PE_aligned = _dwarfpp.DW_EH_PE_aligned
DW_EH_PE_omit = _dwarfpp.DW_EH_PE_omit
DW_FRAME_CFA_COL = _dwarfpp.DW_FRAME_CFA_COL
DW_FRAME_REG1 = _dwarfpp.DW_FRAME_REG1
DW_FRAME_REG2 = _dwarfpp.DW_FRAME_REG2
DW_FRAME_REG3 = _dwarfpp.DW_FRAME_REG3
DW_FRAME_REG4 = _dwarfpp.DW_FRAME_REG4
DW_FRAME_REG5 = _dwarfpp.DW_FRAME_REG5
DW_FRAME_REG6 = _dwarfpp.DW_FRAME_REG6
DW_FRAME_REG7 = _dwarfpp.DW_FRAME_REG7
DW_FRAME_REG8 = _dwarfpp.DW_FRAME_REG8
DW_FRAME_REG9 = _dwarfpp.DW_FRAME_REG9
DW_FRAME_REG10 = _dwarfpp.DW_FRAME_REG10
DW_FRAME_REG11 = _dwarfpp.DW_FRAME_REG11
DW_FRAME_REG12 = _dwarfpp.DW_FRAME_REG12
DW_FRAME_REG13 = _dwarfpp.DW_FRAME_REG13
DW_FRAME_REG14 = _dwarfpp.DW_FRAME_REG14
DW_FRAME_REG15 = _dwarfpp.DW_FRAME_REG15
DW_FRAME_REG16 = _dwarfpp.DW_FRAME_REG16
DW_FRAME_REG17 = _dwarfpp.DW_FRAME_REG17
DW_FRAME_REG18 = _dwarfpp.DW_FRAME_REG18
DW_FRAME_REG19 = _dwarfpp.DW_FRAME_REG19
DW_FRAME_REG20 = _dwarfpp.DW_FRAME_REG20
DW_FRAME_REG21 = _dwarfpp.DW_FRAME_REG21
DW_FRAME_REG22 = _dwarfpp.DW_FRAME_REG22
DW_FRAME_REG23 = _dwarfpp.DW_FRAME_REG23
DW_FRAME_REG24 = _dwarfpp.DW_FRAME_REG24
DW_FRAME_REG25 = _dwarfpp.DW_FRAME_REG25
DW_FRAME_REG26 = _dwarfpp.DW_FRAME_REG26
DW_FRAME_REG27 = _dwarfpp.DW_FRAME_REG27
DW_FRAME_REG28 = _dwarfpp.DW_FRAME_REG28
DW_FRAME_REG29 = _dwarfpp.DW_FRAME_REG29
DW_FRAME_REG30 = _dwarfpp.DW_FRAME_REG30
DW_FRAME_REG31 = _dwarfpp.DW_FRAME_REG31
DW_FRAME_FREG0 = _dwarfpp.DW_FRAME_FREG0
DW_FRAME_FREG1 = _dwarfpp.DW_FRAME_FREG1
DW_FRAME_FREG2 = _dwarfpp.DW_FRAME_FREG2
DW_FRAME_FREG3 = _dwarfpp.DW_FRAME_FREG3
DW_FRAME_FREG4 = _dwarfpp.DW_FRAME_FREG4
DW_FRAME_FREG5 = _dwarfpp.DW_FRAME_FREG5
DW_FRAME_FREG6 = _dwarfpp.DW_FRAME_FREG6
DW_FRAME_FREG7 = _dwarfpp.DW_FRAME_FREG7
DW_FRAME_FREG8 = _dwarfpp.DW_FRAME_FREG8
DW_FRAME_FREG9 = _dwarfpp.DW_FRAME_FREG9
DW_FRAME_FREG10 = _dwarfpp.DW_FRAME_FREG10
DW_FRAME_FREG11 = _dwarfpp.DW_FRAME_FREG11
DW_FRAME_FREG12 = _dwarfpp.DW_FRAME_FREG12
DW_FRAME_FREG13 = _dwarfpp.DW_FRAME_FREG13
DW_FRAME_FREG14 = _dwarfpp.DW_FRAME_FREG14
DW_FRAME_FREG15 = _dwarfpp.DW_FRAME_FREG15
DW_FRAME_FREG16 = _dwarfpp.DW_FRAME_FREG16
DW_FRAME_FREG17 = _dwarfpp.DW_FRAME_FREG17
DW_FRAME_FREG18 = _dwarfpp.DW_FRAME_FREG18
DW_FRAME_FREG19 = _dwarfpp.DW_FRAME_FREG19
DW_FRAME_FREG20 = _dwarfpp.DW_FRAME_FREG20
DW_FRAME_FREG21 = _dwarfpp.DW_FRAME_FREG21
DW_FRAME_FREG22 = _dwarfpp.DW_FRAME_FREG22
DW_FRAME_FREG23 = _dwarfpp.DW_FRAME_FREG23
DW_FRAME_FREG24 = _dwarfpp.DW_FRAME_FREG24
DW_FRAME_FREG25 = _dwarfpp.DW_FRAME_FREG25
DW_FRAME_FREG26 = _dwarfpp.DW_FRAME_FREG26
DW_FRAME_FREG27 = _dwarfpp.DW_FRAME_FREG27
DW_FRAME_FREG28 = _dwarfpp.DW_FRAME_FREG28
DW_FRAME_FREG29 = _dwarfpp.DW_FRAME_FREG29
DW_FRAME_FREG30 = _dwarfpp.DW_FRAME_FREG30
DW_FRAME_FREG31 = _dwarfpp.DW_FRAME_FREG31
DW_FRAME_HIGHEST_NORMAL_REGISTER = _dwarfpp.DW_FRAME_HIGHEST_NORMAL_REGISTER
DW_FRAME_LAST_REG_NUM = _dwarfpp.DW_FRAME_LAST_REG_NUM
DW_FRAME_RA_COL = _dwarfpp.DW_FRAME_RA_COL
DW_FRAME_STATIC_LINK = _dwarfpp.DW_FRAME_STATIC_LINK
DW_CHILDREN_no = _dwarfpp.DW_CHILDREN_no
DW_CHILDREN_yes = _dwarfpp.DW_CHILDREN_yes
DW_ADDR_none = _dwarfpp.DW_ADDR_none
class No_entry(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, No_entry, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, No_entry, name)
    __repr__ = _swig_repr
    def __init__(self, *args): 
        this = _dwarfpp.new_No_entry(*args)
        try: self.this.append(this)
        except: self.this = this
    __swig_destroy__ = _dwarfpp.delete_No_entry
    __del__ = lambda self : None;
No_entry_swigregister = _dwarfpp.No_entry_swigregister
No_entry_swigregister(No_entry)
cvar = _dwarfpp.cvar

class Error(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, Error, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, Error, name)
    __repr__ = _swig_repr
    __swig_setmethods__["e"] = _dwarfpp.Error_e_set
    __swig_getmethods__["e"] = _dwarfpp.Error_e_get
    if _newclass:e = _swig_property(_dwarfpp.Error_e_get, _dwarfpp.Error_e_set)
    __swig_setmethods__["arg"] = _dwarfpp.Error_arg_set
    __swig_getmethods__["arg"] = _dwarfpp.Error_arg_get
    if _newclass:arg = _swig_property(_dwarfpp.Error_arg_get, _dwarfpp.Error_arg_set)
    def __init__(self, *args): 
        this = _dwarfpp.new_Error(*args)
        try: self.this.append(this)
        except: self.this = this
    __swig_destroy__ = _dwarfpp.delete_Error
    __del__ = lambda self : None;
Error_swigregister = _dwarfpp.Error_swigregister
Error_swigregister(Error)

default_error_handler = _dwarfpp.default_error_handler
class file(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, file, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, file, name)
    __repr__ = _swig_repr
    def get_dbg(*args): return _dwarfpp.file_get_dbg(*args)
    def __init__(self, *args): 
        this = _dwarfpp.new_file(*args)
        try: self.this.append(this)
        except: self.this = this
    __swig_destroy__ = _dwarfpp.delete_file
    __del__ = lambda self : None;
    def next_cu_header(*args): return _dwarfpp.file_next_cu_header(*args)
    def offdie(*args): return _dwarfpp.file_offdie(*args)
    def get_cu_die_offset_given_cu_header_offset(*args): return _dwarfpp.file_get_cu_die_offset_given_cu_header_offset(*args)
file_swigregister = _dwarfpp.file_swigregister
file_swigregister(file)

class die(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, die, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, die, name)
    __repr__ = _swig_repr
    __swig_destroy__ = _dwarfpp.delete_die
    __del__ = lambda self : None;
    def __init__(self, *args): 
        this = _dwarfpp.new_die(*args)
        try: self.this.append(this)
        except: self.this = this
    def tag(*args): return _dwarfpp.die_tag(*args)
    def offset(*args): return _dwarfpp.die_offset(*args)
    def CU_offset(*args): return _dwarfpp.die_CU_offset(*args)
    def name(*args): return _dwarfpp.die_name(*args)
    def hasattr(*args): return _dwarfpp.die_hasattr(*args)
    def lowpc(*args): return _dwarfpp.die_lowpc(*args)
    def highpc(*args): return _dwarfpp.die_highpc(*args)
    def bytesize(*args): return _dwarfpp.die_bytesize(*args)
    def bitsize(*args): return _dwarfpp.die_bitsize(*args)
    def bitoffset(*args): return _dwarfpp.die_bitoffset(*args)
    def srclang(*args): return _dwarfpp.die_srclang(*args)
    def arrayorder(*args): return _dwarfpp.die_arrayorder(*args)
die_swigregister = _dwarfpp.die_swigregister
die_swigregister(die)

class attribute(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, attribute, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, attribute, name)
    __repr__ = _swig_repr
    def __init__(self, *args): 
        this = _dwarfpp.new_attribute(*args)
        try: self.this.append(this)
        except: self.this = this
    __swig_destroy__ = _dwarfpp.delete_attribute
    __del__ = lambda self : None;
    def hasform(*args): return _dwarfpp.attribute_hasform(*args)
    def whatform(*args): return _dwarfpp.attribute_whatform(*args)
    def whatform_direct(*args): return _dwarfpp.attribute_whatform_direct(*args)
    def whatattr(*args): return _dwarfpp.attribute_whatattr(*args)
    def formref(*args): return _dwarfpp.attribute_formref(*args)
    def formref_global(*args): return _dwarfpp.attribute_formref_global(*args)
    def formaddr(*args): return _dwarfpp.attribute_formaddr(*args)
    def formflag(*args): return _dwarfpp.attribute_formflag(*args)
    def formudata(*args): return _dwarfpp.attribute_formudata(*args)
    def formsdata(*args): return _dwarfpp.attribute_formsdata(*args)
    def formblock(*args): return _dwarfpp.attribute_formblock(*args)
    def formstring(*args): return _dwarfpp.attribute_formstring(*args)
    def loclist_n(*args): return _dwarfpp.attribute_loclist_n(*args)
    def loclist(*args): return _dwarfpp.attribute_loclist(*args)
attribute_swigregister = _dwarfpp.attribute_swigregister
attribute_swigregister(attribute)

class attribute_array(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, attribute_array, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, attribute_array, name)
    __repr__ = _swig_repr
    def __init__(self, *args): 
        this = _dwarfpp.new_attribute_array(*args)
        try: self.this.append(this)
        except: self.this = this
    def count(*args): return _dwarfpp.attribute_array_count(*args)
    def get(*args): return _dwarfpp.attribute_array_get(*args)
    __swig_destroy__ = _dwarfpp.delete_attribute_array
    __del__ = lambda self : None;
attribute_array_swigregister = _dwarfpp.attribute_array_swigregister
attribute_array_swigregister(attribute_array)

class block(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, block, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, block, name)
    __repr__ = _swig_repr
    def __init__(self, *args): 
        this = _dwarfpp.new_block(*args)
        try: self.this.append(this)
        except: self.this = this
    def len(*args): return _dwarfpp.block_len(*args)
    def data(*args): return _dwarfpp.block_data(*args)
    __swig_destroy__ = _dwarfpp.delete_block
    __del__ = lambda self : None;
block_swigregister = _dwarfpp.block_swigregister
block_swigregister(block)

class attribute_value(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, attribute_value, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, attribute_value, name)
    __repr__ = _swig_repr
    FLAG = _dwarfpp.attribute_value_FLAG
    UNSIGNED = _dwarfpp.attribute_value_UNSIGNED
    SIGNED = _dwarfpp.attribute_value_SIGNED
    BLOCK = _dwarfpp.attribute_value_BLOCK
    STRING = _dwarfpp.attribute_value_STRING
    REF = _dwarfpp.attribute_value_REF
    LOCLIST = _dwarfpp.attribute_value_LOCLIST
    def get_flag(*args): return _dwarfpp.attribute_value_get_flag(*args)
    def get_unsigned(*args): return _dwarfpp.attribute_value_get_unsigned(*args)
    def get_signed(*args): return _dwarfpp.attribute_value_get_signed(*args)
    def get_block(*args): return _dwarfpp.attribute_value_get_block(*args)
    def get_string(*args): return _dwarfpp.attribute_value_get_string(*args)
    def get_ref(*args): return _dwarfpp.attribute_value_get_ref(*args)
    def _print(*args): return _dwarfpp.attribute_value__print(*args)
    def print_block_as_location_expression(*args): return _dwarfpp.attribute_value_print_block_as_location_expression(*args)
    def __init__(self, *args): 
        this = _dwarfpp.new_attribute_value(*args)
        try: self.this.append(this)
        except: self.this = this
    __swig_destroy__ = _dwarfpp.delete_attribute_value
    __del__ = lambda self : None;
attribute_value_swigregister = _dwarfpp.attribute_value_swigregister
attribute_value_swigregister(attribute_value)

class encap_die(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, encap_die, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, encap_die, name)
    __repr__ = _swig_repr
    def __init__(self, *args): 
        this = _dwarfpp.new_encap_die(*args)
        try: self.this.append(this)
        except: self.this = this
    def get_attrs(*args): return _dwarfpp.encap_die_get_attrs(*args)
    def _print(*args): return _dwarfpp.encap_die__print(*args)
    __swig_destroy__ = _dwarfpp.delete_encap_die
    __del__ = lambda self : None;
encap_die_swigregister = _dwarfpp.encap_die_swigregister
encap_die_swigregister(encap_die)

class _global(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, _global, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, _global, name)
    def __init__(self): raise AttributeError, "No constructor defined"
    __repr__ = _swig_repr
    def get_name(*args): return _dwarfpp._global_get_name(*args)
    def get_die_offset(*args): return _dwarfpp._global_get_die_offset(*args)
    def get_cu_offset(*args): return _dwarfpp._global_get_cu_offset(*args)
    def cu_die_offset_given_cu_header_offset(*args): return _dwarfpp._global_cu_die_offset_given_cu_header_offset(*args)
    def name_offsets(*args): return _dwarfpp._global_name_offsets(*args)
    __swig_destroy__ = _dwarfpp.delete__global
    __del__ = lambda self : None;
_global_swigregister = _dwarfpp._global_swigregister
_global_swigregister(_global)

class global_array(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, global_array, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, global_array, name)
    __repr__ = _swig_repr
    def __init__(self, *args): 
        this = _dwarfpp.new_global_array(*args)
        try: self.this.append(this)
        except: self.this = this
    def count(*args): return _dwarfpp.global_array_count(*args)
    def get(*args): return _dwarfpp.global_array_get(*args)
    __swig_destroy__ = _dwarfpp.delete_global_array
    __del__ = lambda self : None;
global_array_swigregister = _dwarfpp.global_array_swigregister
global_array_swigregister(global_array)

print_dies_depthfirst = _dwarfpp.print_dies_depthfirst
print_globals = _dwarfpp.print_globals
print_attributes = _dwarfpp.print_attributes
class abi_information(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, abi_information, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, abi_information, name)
    __repr__ = _swig_repr
    def __init__(self, *args): 
        this = _dwarfpp.new_abi_information(*args)
        try: self.this.append(this)
        except: self.this = this
    def _print(*args): return _dwarfpp.abi_information__print(*args)
    __swig_getmethods__["test_map_copy_constructor"] = lambda x: _dwarfpp.abi_information_test_map_copy_constructor
    if _newclass:test_map_copy_constructor = staticmethod(_dwarfpp.abi_information_test_map_copy_constructor)
    def get_funcs(*args): return _dwarfpp.abi_information_get_funcs(*args)
    def get_toplevel_vars(*args): return _dwarfpp.abi_information_get_toplevel_vars(*args)
    def get_types(*args): return _dwarfpp.abi_information_get_types(*args)
    __swig_destroy__ = _dwarfpp.delete_abi_information
    __del__ = lambda self : None;
abi_information_swigregister = _dwarfpp.abi_information_swigregister
abi_information_swigregister(abi_information)
abi_information_test_map_copy_constructor = _dwarfpp.abi_information_test_map_copy_constructor



