API changes: 
remove boost::optional from shared_ptr 
change "contains_addr_" wording
replace dfs iterator use of conjoining_sequence with shared_from_this
iterator_here, get_this -- both necessary?

code changes:
fix performance of iteration

API completion:
more const+nonconst completeness (accessors, iterators)

code cleanup:
remove commented-out old code
remove/verbosify unwanted debug printouts
fix tabs
remove std:: and boost:: and dwarf:: where appropriate
move stuff from headers to cpp files
eliminate deprecation warnings
minimal autotoolification

work in progress:
Doxygen
expression evaluator doesn't support many opcodes
dwarfppdump doesn't prettyprint everything

multi-standard stuff:
DWARF3 or DEFAULT_DWARF_SPEC is hardcoded in places
spec should be per-CU or per DIE not per dieset
DW_AT_MIPS_linkage_name is used where it shouldn't be
add support for guessing vendor extensions using compile unit string

semantics:
testing equality on p_ds meaning "is this the same DIE?" should be defined (by position()?)

performance:
slow start-up in dwarfppdump
iterators should cache parent info in their owning dieset
do a gprof run

other bits of DWARF:
line number program
source file identifiers

possible future stuff:
make operator* on iterators dereference pointers too? arguments...
 -- YES. analogue with  containers
 -- NO. analogue with containers-of-pointers
 -- can we hide the fact that we contain pointers from the user completely?
 -- possibly YES, making iterators the *only* public interface, but this is a big change;
    for now NO; the user should understand it as a container of pointers
	BUT this is a future-work API change
