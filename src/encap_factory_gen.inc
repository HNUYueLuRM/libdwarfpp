case DW_TAG_array_type: return boost::make_shared<dwarf::encap::Die_encap_array_type>(ds, d, parent_off);case DW_TAG_class_type: return boost::make_shared<dwarf::encap::Die_encap_class_type>(ds, d, parent_off);case DW_TAG_entry_point: return boost::make_shared<dwarf::encap::Die_encap_entry_point>(ds, d, parent_off);case DW_TAG_enumeration_type: return boost::make_shared<dwarf::encap::Die_encap_enumeration_type>(ds, d, parent_off);case DW_TAG_formal_parameter: return boost::make_shared<dwarf::encap::Die_encap_formal_parameter>(ds, d, parent_off);case DW_TAG_imported_declaration: return boost::make_shared<dwarf::encap::Die_encap_imported_declaration>(ds, d, parent_off);case DW_TAG_label: return boost::make_shared<dwarf::encap::Die_encap_label>(ds, d, parent_off);case DW_TAG_lexical_block: return boost::make_shared<dwarf::encap::Die_encap_lexical_block>(ds, d, parent_off);case DW_TAG_member: return boost::make_shared<dwarf::encap::Die_encap_member>(ds, d, parent_off);case DW_TAG_pointer_type: return boost::make_shared<dwarf::encap::Die_encap_pointer_type>(ds, d, parent_off);case DW_TAG_reference_type: return boost::make_shared<dwarf::encap::Die_encap_reference_type>(ds, d, parent_off);case DW_TAG_compile_unit: return boost::make_shared<dwarf::encap::Die_encap_compile_unit>(ds, d, parent_off);case DW_TAG_string_type: return boost::make_shared<dwarf::encap::Die_encap_string_type>(ds, d, parent_off);case DW_TAG_structure_type: return boost::make_shared<dwarf::encap::Die_encap_structure_type>(ds, d, parent_off);case DW_TAG_subroutine_type: return boost::make_shared<dwarf::encap::Die_encap_subroutine_type>(ds, d, parent_off);case DW_TAG_typedef: return boost::make_shared<dwarf::encap::Die_encap_typedef>(ds, d, parent_off);case DW_TAG_union_type: return boost::make_shared<dwarf::encap::Die_encap_union_type>(ds, d, parent_off);case DW_TAG_unspecified_parameters: return boost::make_shared<dwarf::encap::Die_encap_unspecified_parameters>(ds, d, parent_off);case DW_TAG_variant: return boost::make_shared<dwarf::encap::Die_encap_variant>(ds, d, parent_off);case DW_TAG_common_block: return boost::make_shared<dwarf::encap::Die_encap_common_block>(ds, d, parent_off);case DW_TAG_common_inclusion: return boost::make_shared<dwarf::encap::Die_encap_common_inclusion>(ds, d, parent_off);case DW_TAG_inheritance: return boost::make_shared<dwarf::encap::Die_encap_inheritance>(ds, d, parent_off);case DW_TAG_inlined_subroutine: return boost::make_shared<dwarf::encap::Die_encap_inlined_subroutine>(ds, d, parent_off);case DW_TAG_module: return boost::make_shared<dwarf::encap::Die_encap_module>(ds, d, parent_off);case DW_TAG_ptr_to_member_type: return boost::make_shared<dwarf::encap::Die_encap_ptr_to_member_type>(ds, d, parent_off);case DW_TAG_set_type: return boost::make_shared<dwarf::encap::Die_encap_set_type>(ds, d, parent_off);case DW_TAG_subrange_type: return boost::make_shared<dwarf::encap::Die_encap_subrange_type>(ds, d, parent_off);case DW_TAG_with_stmt: return boost::make_shared<dwarf::encap::Die_encap_with_stmt>(ds, d, parent_off);case DW_TAG_access_declaration: return boost::make_shared<dwarf::encap::Die_encap_access_declaration>(ds, d, parent_off);case DW_TAG_base_type: return boost::make_shared<dwarf::encap::Die_encap_base_type>(ds, d, parent_off);case DW_TAG_catch_block: return boost::make_shared<dwarf::encap::Die_encap_catch_block>(ds, d, parent_off);case DW_TAG_const_type: return boost::make_shared<dwarf::encap::Die_encap_const_type>(ds, d, parent_off);case DW_TAG_constant: return boost::make_shared<dwarf::encap::Die_encap_constant>(ds, d, parent_off);case DW_TAG_enumerator: return boost::make_shared<dwarf::encap::Die_encap_enumerator>(ds, d, parent_off);case DW_TAG_file_type: return boost::make_shared<dwarf::encap::Die_encap_file_type>(ds, d, parent_off);case DW_TAG_friend: return boost::make_shared<dwarf::encap::Die_encap_friend>(ds, d, parent_off);case DW_TAG_namelist: return boost::make_shared<dwarf::encap::Die_encap_namelist>(ds, d, parent_off);case DW_TAG_namelist_item: return boost::make_shared<dwarf::encap::Die_encap_namelist_item>(ds, d, parent_off);case DW_TAG_packed_type: return boost::make_shared<dwarf::encap::Die_encap_packed_type>(ds, d, parent_off);case DW_TAG_subprogram: return boost::make_shared<dwarf::encap::Die_encap_subprogram>(ds, d, parent_off);case DW_TAG_template_type_parameter: return boost::make_shared<dwarf::encap::Die_encap_template_type_parameter>(ds, d, parent_off);case DW_TAG_template_value_parameter: return boost::make_shared<dwarf::encap::Die_encap_template_value_parameter>(ds, d, parent_off);case DW_TAG_thrown_type: return boost::make_shared<dwarf::encap::Die_encap_thrown_type>(ds, d, parent_off);case DW_TAG_try_block: return boost::make_shared<dwarf::encap::Die_encap_try_block>(ds, d, parent_off);case DW_TAG_variant_part: return boost::make_shared<dwarf::encap::Die_encap_variant_part>(ds, d, parent_off);case DW_TAG_variable: return boost::make_shared<dwarf::encap::Die_encap_variable>(ds, d, parent_off);case DW_TAG_volatile_type: return boost::make_shared<dwarf::encap::Die_encap_volatile_type>(ds, d, parent_off);case DW_TAG_dwarf_procedure: return boost::make_shared<dwarf::encap::Die_encap_dwarf_procedure>(ds, d, parent_off);case DW_TAG_restrict_type: return boost::make_shared<dwarf::encap::Die_encap_restrict_type>(ds, d, parent_off);case DW_TAG_interface_type: return boost::make_shared<dwarf::encap::Die_encap_interface_type>(ds, d, parent_off);case DW_TAG_namespace: return boost::make_shared<dwarf::encap::Die_encap_namespace>(ds, d, parent_off);case DW_TAG_imported_module: return boost::make_shared<dwarf::encap::Die_encap_imported_module>(ds, d, parent_off);case DW_TAG_unspecified_type: return boost::make_shared<dwarf::encap::Die_encap_unspecified_type>(ds, d, parent_off);case DW_TAG_partial_unit: return boost::make_shared<dwarf::encap::Die_encap_partial_unit>(ds, d, parent_off);case DW_TAG_imported_unit: return boost::make_shared<dwarf::encap::Die_encap_imported_unit>(ds, d, parent_off);case DW_TAG_condition: return boost::make_shared<dwarf::encap::Die_encap_condition>(ds, d, parent_off);case DW_TAG_shared_type: return boost::make_shared<dwarf::encap::Die_encap_shared_type>(ds, d, parent_off);